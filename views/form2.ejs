<html>

<head>
    <title>Create Project Proposal</title>
    <%- include partials/scriptResources %>
    <link rel="stylesheet" href="css/form2.css">
</head>

<body>
    <div class="main ui text container">
        <div class="ui segments" style="padding-left: 1.2em; padding-right: 1.2em;">
            <form name="form2" action="create-form-3" method="post">
                <br>
                <div class="ui grid">
                    <div class="two column row">
                        <div class="left floated column">
                            <h1 class="ui header" style="margin-top: 0.65em;">Create Proposal Form</h1>
                        </div>
                        <div class="right floated column">
                            <img src="assets/svg/logo_opps-logo-green.svg" />
                        </div>
                    </div>
                </div>
                <h3 class="labelHead ui header">Brief Context /
                    Perspective of the Activity</h3>

                <div class="required field">
                    <h5 class="labelHead ui header"><label>Part 1 <span class="red"> *</span></label></h5>
                    <ol class="ui list">
                        <li value="-">What situation do you see (observation/s) in your organization, university,
                            society, or our
                            world?</li>
                        <li value="-">What certain experiences, problems, or questions do you have in
                            relation to
                            what you see?
                            <em>(May
                                be
                                supported with examples)</em></li>
                    </ol>
                    <textarea name='context1' rows="2" style="resize: none;" required></textarea>
                </div>
                <br>

                <div class="required field">
                    <h5 class="labelHead ui header"><label>Part 2 <span class="red"> *</span></label></h5>
                    <ol class="ui list">
                        <li value="-">Why is there a problem?</li>
                        <li value="-">What could be the cause and the effect?</li>
                        <li value="-">How did you feel about the experience, situation, or problem? And why did you
                            feel
                            that
                            way?</li>
                        <li value="-">What can we discover or realize?</li>
                    </ol>
                    <textarea rows="2" name='context2' required></textarea>
                </div>

                <br />

                <div class="required field">
                    <h5 class="labelHead ui header"><label>Part 3 <span class="red"> *</span></label></h5>
                    <ol class="ui list">
                        <li value="-">Out of all the possible projects, activities, and solutions, why this?</li>
                        <li value="-">As an organization, what will you commit as a response to what you have
                            started
                            in
                            Part 2?</li>
                    </ol>
                    <textarea rows="2" name='context3' required></textarea>
                </div>

                <br />
                <h3 class="labelHead ui header">Objectives<span class="red"> *</span></h3>
                <div class="field">
                    <label>1.</label>
                    <input class="inputron" name='objective1' type="text" required>
                </div>
                <br /><br />
                <div>
                    <label>2.</label>
                    <input class="inputron" name='objective2' type="text" required>
                </div>
                <br /><br />
                <div>
                    <label>3.</label>
                    <input class="inputron" name='objective3' type="text" required>
                </div>
                <br /><br />

                <input style="display:none;" value='0' id="dynamicTable1length" name="dynamicTable1len">
                <h3 class="labelHead ui header"><label>Project Head/s <span class="red"> *</span></label></h3>
                <table class="ui compact celled definition fixed table unstackable" id="dynamicTable1">
                    <thead class="full-width">
                        <tr style="text-align: center;">
                            <th style="width: 40px;"></th>
                            <th class="item">Name</th>
                            <th class="item five wide">Contact Number</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr value=0>
                            <td class="collapsing">
                                <div class="ui fitted checkbox">
                                    <input type="checkbox" name="phead_check"><label></label>
                                </div>
                            </td>
                            <td><input class="inputron no-margin" name="phead_name0" type="text" required></td>
                            <td><input class="inputron no-margin" name="phead_number0" type="number" required></td>
                        </tr>
                    </tbody>
                </table>
                <button type="button" class="row-button next" id="btnAddPhead">Add Row</button>
                <button type="button" class="row-button previous" id="btnDeletePhead">Delete
                    Row</button>

                <br /><br />
                <input style="display:none;" value='0' id="dynamicTable2length" name="dynamicTable2len">
                <h3 class="labelHead ui header"><label>Comprehensive Program Design <span class="red"> *</span></label></h3>
                <table class="ui compact celled definition fixed table unstackable" id="dynamicTable2">
                    <thead class="full-width">
                        <tr style="text-align: center;">
                            <th style="width: 40px;"></th>
                            <th class="item">Start Time to End Time</th>
                            <th class="item">Activity</th>
                            <th class="item five wide">Brief Description of the Activity</th>
                            <th class="item">Person-in-charge</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr value=0>
                            <td class="collapsing">
                                <div class="ui fitted checkbox">
                                    <input type="checkbox"> <label></label>
                                </div>
                            </td>
                            <td><input class="inputron no-margin" type="time" name="startTime0" required>
                                <input class="inputron no-margin" type="time" name="endTime0" required></td>
                            <td><textarea class="row-textarea" name="activity0" required></textarea></td>
                            <td><textarea class="row-textarea" name="description0" required></textarea></td>
                            <td><textarea class="row-textarea" name="person0" required></textarea></td>
                        </tr>
                    </tbody>
                </table>
                <button type="button" class="row-button next" id="btnAddCPD">Add Row</button>
                <button type="button" class="row-button previous" id="btnDeleteCPD">Delete Row</button>

                <br /><br />
                <br /><br />
                <div class="ui grid">
                    <div class="row">
                        <div class="four wide left floated column">
                            <button type="submit" class="fluid submit-button previous">Previous</button>
                        </div>

                        <div class="four wide right floated column">
                            <button type="submit" class="fluid submit-button next">Next</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script>
        //add project head
        function addPhead() {
            var row = document.createElement("tr");
            var col1 = document.createElement("td");
            col1.className = "collapsing";
            var div = document.createElement("div");
            div.className = "ui fitted checkbox";
            var cBox = document.createElement("input");
            cBox.setAttribute('type', 'checkbox');
            cBox.setAttribute('name', 'phead_check');
            var label = document.createElement("label");

            var tableLength = document.getElementById("dynamicTable1length");
            console.log(tableLength.value)
            row.setAttribute('value', tableLength.value)
            console.log(tableLength.value)
            tableLength.setAttribute('value', parseInt(tableLength.value, 10) + 1)

            div.append(cBox);
            div.append(label);
            col1.append(div);

            var col2 = document.createElement("td");
            var input2 = document.createElement("input");
            input2.className = "inputron no-margin";
            input2.setAttribute('type', 'text');
            input2.setAttribute('required', true);
            input2.setAttribute('name', 'phead_name' + tableLength.value);
            col2.append(input2);

            var col3 = document.createElement("td");
            var input3 = document.createElement("input");
            input3.className = "inputron no-margin";
            input3.setAttribute('type', 'number');
            input3.setAttribute('required', true);
            input3.setAttribute('name', 'phead_number' + tableLength.value)
            col3.append(input3);

            row.append(col1);
            row.append(col2);
            row.append(col3);

            $("#dynamicTable1").find('tbody').append(row);

            console.log('ADD PHEAD()');
        }

        //delete project head
        function deletePhead() {
            let tableRef = document.getElementById('dynamicTable1');
            let tbody = tableRef.querySelector("tbody");

            let checkedInputs = document.querySelectorAll("input[type='checkbox']:checked");
            Array.prototype.slice.call(checkedInputs)
                .forEach(input => tbody.removeChild(input.parentNode.parentNode.parentNode))

            var i;

            //reset index
            for (i = 0; i < document.getElementById("dynamicTable1").rows.length; i++) {
                for (var j = 0; j < document.getElementById("dynamicTable1").rows[i].cells.length; j++) {
                    if (i > 0 && j == 1) {
                        document.getElementById("dynamicTable1").rows[i].cells[j].firstElementChild.name = 'phead_name' +
                            (i - 1)
                    }
                    if (i > 0 && j == 2) {
                        document.getElementById("dynamicTable1").rows[i].cells[j].firstElementChild.name =
                            'phead_number' + (i - 1)
                    }
                }
            }

            var tableLength = document.getElementById("dynamicTable1length");
            tableLength.setAttribute('value', i - 2)
            console.log('DELETE PHEAD()');
        }

        //add row in comprehensive projgram design table
        function addCPD() {
            var row = document.createElement("tr");
            var col1 = document.createElement("td");
            col1.className = "collapsing";
            var div = document.createElement("div");
            div.className = "ui fitted checkbox";
            var cBox = document.createElement("input");
            cBox.setAttribute('type', 'checkbox');
            var label = document.createElement("label");

            var tableLength = document.getElementById("dynamicTable2length");
            row.setAttribute('value', tableLength.value)
            tableLength.setAttribute('value', parseInt(tableLength.value, 10) + 1)

            div.append(cBox);
            div.append(label);
            col1.append(div);

            var col2 = document.createElement("td");
            var input2 = document.createElement("input");
            input2.className = "inputron no-margin";
            input2.setAttribute('type', 'time');
            input2.setAttribute('required', true);
            input2.setAttribute('name', 'startTime' + tableLength.value);
            var input6 = document.createElement("input");
            input6.className = "inputron no-margin";
            input6.setAttribute('type', 'time');
            input6.setAttribute('required', true);
            input6.setAttribute('name', 'endTime' + tableLength.value);
            col2.append(input2);
            col2.append(input6);

            var col3 = document.createElement("td");
            var input3 = document.createElement("textarea");
            input3.className = "row-textarea";
            input3.setAttribute('required', true);
            input3.setAttribute('name', 'activity' + tableLength.value);
            col3.append(input3);

            var col4 = document.createElement("td");
            var input4 = document.createElement("textarea");
            input4.className = "row-textarea";
            input4.setAttribute('required', true);
            input4.setAttribute('name', 'description' + tableLength.value);
            col4.append(input4);

            var col5 = document.createElement("td");
            var input5 = document.createElement("textarea");
            input5.className = "row-textarea";
            input5.setAttribute('required', true);
            input5.setAttribute('name', 'person' + tableLength.value);
            col5.append(input5);

            row.append(col1);
            row.append(col2);
            row.append(col3);
            row.append(col4);
            row.append(col5);

            $("#dynamicTable2").find('tbody').append(row);

            console.log('ADD ROW()');
        }

        //delete row in comprehensive program design table
        function deleteCPD() {
            let tableRef = document.getElementById('dynamicTable2');
            let tbody = tableRef.querySelector("tbody");

            let checkedInputs = document.querySelectorAll("input[type='checkbox']:checked");
            Array.prototype.slice.call(checkedInputs)
                .forEach(input => tbody.removeChild(input.parentNode.parentNode.parentNode));

            var i;
            //reset index
            for (i = 0; i < document.getElementById("dynamicTable2").rows.length; i++) {
                for (var j = 0; j < document.getElementById("dynamicTable2").rows[i].cells.length; j++) {
                    if (i > 0 && j == 1) {
                        document.getElementById("dynamicTable2").rows[i].cells[j].firstElementChild.name = 'startTime' +
                            (i - 1);
                        document.getElementById("dynamicTable2").rows[i].cells[j].childNodes[1].name = 'endTime' + (i -
                            1);
                    }
                    if (i > 0 && j == 2) {
                        document.getElementById("dynamicTable2").rows[i].cells[j].firstElementChild.name = 'activity' +
                            (i - 1);
                    }
                    if (i > 0 && j == 3) {
                        document.getElementById("dynamicTable2").rows[i].cells[j].firstElementChild.name =
                            'description' + (i - 1);
                    }
                    if (i > 0 && j == 4) {
                        document.getElementById("dynamicTable2").rows[i].cells[j].firstElementChild.name = 'person' + (
                            i - 1);
                    }
                }
            }

            var tableLength = document.getElementById("dynamicTable2length");
            tableLength.setAttribute('value', i - 2)
            console.log('DELETE ROW()');
        }

        $(document).ready(function () {
            $(document).on('click', 'input[type=checkbox]', function () {
                $(this).closest("tr").find('td').toggleClass("highlight", this.checked);
            });

            document.getElementById("btnAddCPD").addEventListener("click", function () {
                addCPD();
            });

            document.getElementById("btnDeleteCPD").addEventListener("click", function () {
                deleteCPD();
            });

            document.getElementById("btnAddPhead").addEventListener("click", function () {
                addPhead();
            });

            document.getElementById("btnDeletePhead").addEventListener("click", function () {
                deletePhead();
            });

            document.getElementById("btnAddBOE").addEventListener("click", function () {
                addBOE();
            });

            document.getElementById("btnDeleteBOE").addEventListener("click", function () {
                deleteBOE();
            });

            document.getElementById("btnAddProjRev").addEventListener("click", function () {
                addProjRev();
            });

            document.getElementById("btnDeleteProjRev").addEventListener("click", function () {
                deleteProjRev();
            });

            document.getElementById("btnAddProjExp").addEventListener("click", function () {
                addProjExp();
            });

            document.getElementById("btnDeleteProjExp").addEventListener("click", function () {
                deleteProjExp();
            });

            //adds Source of Funds automatically and Organizational Funds
            var i = 0;
            $("input").change(function () {
                var sum_SOF = 0;
                var sum_OF = 0;
                var remBalance = 0;

                //Source of Funds
                $("input[name=OrganizationalFunds]").each(function () {
                    sum_SOF = sum_SOF + parseFloat($(this).val());
                });
                $("input[name=ParticipantsFee]").each(function () {
                    sum_SOF = sum_SOF + parseFloat($(this).val());
                });
                $("input[name=OtherFunds]").each(function () {
                    sum_SOF = sum_SOF + parseFloat($(this).val());
                });
                $("th[name=totalSource]").text("Php " + sum_SOF.toFixed(2));

                //Organizational Funds
                $("input[name=OperationalFund]").each(function () {
                    sum_OF = sum_OF + parseFloat($(this).val());
                });
                $("input[name=DepositoryFund]").each(function () {
                    sum_OF = sum_OF + parseFloat($(this).val());
                });
                $("input[name=OtherFund]").each(function () {
                    sum_OF = sum_OF + parseFloat($(this).val());
                });
                $("td[name=totalDisbursement]").text("Php " + sum_OF.toFixed(2));
            });

            function calculateSum() {
                var sum = 0;
                $(".txt").each(function () {

                    if (!isNaN(this.value) && this.value.length != 0) {
                        sum += parseFloat(this.value);
                    }

                });
                //.toFixed() method will roundoff the final sum to 2 decimal places
                $("#sum").html(sum.toFixed(2));
            }

            $("#dynamicTable3").on("keyup", ".txt", function () {
                calculateSum();
            });

            //            $('input[name=phead_check][type=checkbox]').click(function(){
            //                if (this.checked) {
            //                    $('#btnDeletePhead').css('color', '#26BE9B');
            //                    $('#btnDeletePhead').css('border-color', '#26BE9B');
            //                }
            //                else {
            //                    $('#btnDeletePhead').css('color', '#DCDCDC');
            //                    $('#btnDeletePhead').css('border-color', '#DCDCDC');
            //                }
            //            });
        });
    </script>
</body>

</html>